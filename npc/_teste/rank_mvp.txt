//===========================================================\\
//          ____   __   _  _  __    ____   __   ____         //
//         / ___) /  \ / )( \(  )  (  __) / _\ (_  _)        \\
//         \___ \(  O )) \/ (/ (_/\ ) _) /    \  )(          //
//         (____/ \__/ \____/\____/(____)\_/\_/ (__)         \\
//                                                           //
//================== www.souleat.com.br =====================\\
//======================= by: Guru ==========================//
/*
CREATE TABLE `mvpladder` (
	`id` int(11) NOT NULL AUTO_INCREMENT,
	`char_id` int(11) unsigned NOT NULL default '0',
	`mob_id` INT NOT NULL,
	`kills` INT DEFAULT 0,
  	PRIMARY KEY (`id`),
	INDEX (`char_id`),
	INDEX (`mob_id`),
	INDEX (`kills`)
) ENGINE=MyISAM AUTO_INCREMENT=1;
*/

//---- INICIO

-	script	mvpladder	-1,{

OnInit:
// Configurações
	.gmnokill = 0; // GMs não devem matar MVPs. Um GM com nível <este número> ou superior não fará nada. Se definido como 60, GMs de nível 60 ou superior não receberão nada ao matar jogadores: 0 - desativado

// 0 = disabled
	// 1 = killer only
	// 2 = (on party) randomly to party member online
	// 3 = (on party) to all members online
	.reward_option = 1;

	// Item reward list
	// can add more than 1 items
	// <item>, <id>
	setarray .reward, 
		601,1;

	// Enable announcement?
	.announce = true;

	.showtotal = 10; // mostrar o comprimento da escada.
	.showpage = 10;	// definir as visualizações por página.

	.showstatue = 3; // número de estátuas. Este número deve corresponder ao número de duplicatas no final do script.
	.fix_custom_sprite = true; // se o seu servidor tem sprites animados personalizados que se sobrepõem à animação da estátua repetidamente, ative isso
// Config ends ------------------------------------------------------------------------------------------

//	to prevent bug happen
	if (.gmnokill <= 0) .gmnokill = 100;

	sleep 1;
	
OnTimer1000: // atualiza as estátuas a cada 30 segundos. Observe que a tabela `char` não é confiável, o jogador ainda precisa realizar certas tarefas para salvar o personagem -> veja 'save_settings' em conf\map-athena.conf
	.@query$ = "SELECT `char`.`char_id`, `char`.`name`, `char`.`guild_id`, `char`.`class`, "
			 + "`char`.`sex`, `char`.`hair`, `char`.`hair_color`, `char`.`clothes_color`, "
			 + "`char`.`body`, `char`.`head_top`, `char`.`head_mid`, `char`.`head_bottom`, `char`.`robe`, "
	         + "SUM(`mvpladder`.`kills`) as `orderKills` "
	         + "FROM `char` RIGHT JOIN `mvpladder` ON `char`.`char_id` = `mvpladder`.`char_id` GROUP BY `char`.`char_id` ORDER BY `orderKills` DESC LIMIT " + .showstatue;
	.@nb = query_sql(.@query$, .@cid, .@name$, .@guild_id, .@class, .@sex$, .@hair, .@hair_color, .@clothes_color, .@body, .@head_top, .@head_mid, .@head_bottom, .@robe, .@kills);
	if (.fix_custom_sprite) {
		for (.@i = 0; .@i < .@nb; ++.@i) {
			setunitdata .statue[.@i +1], UNPC_HEADTOP, 0;
			setunitdata .statue[.@i +1], UNPC_HEADMIDDLE, 0;
			setunitdata .statue[.@i +1], UNPC_HEADBOTTOM, 0;
			setunitdata .statue[.@i +1], UNPC_ROBE, 0;
		}
	}
	for (.@i = 0; .@i < .@nb; ++.@i) {
		setunitdata .statue[.@i +1], UNPC_CLASS, .@class[.@i];
		setunitdata .statue[.@i +1], UNPC_SEX, (.@sex$[.@i] == "F")? SEX_FEMALE:SEX_MALE;
		setunitdata .statue[.@i +1], UNPC_HAIRSTYLE, .@hair[.@i];
		setunitdata .statue[.@i +1], UNPC_HAIRCOLOR, .@hair_color[.@i];
		setunitdata .statue[.@i +1], UNPC_CLOTHCOLOR, .@clothes_color[.@i];
		setunitdata .statue[.@i +1], UNPC_BODY2, .@body[.@i];
		setunitdata .statue[.@i +1], UNPC_HEADTOP, .@head_top[.@i];
		setunitdata .statue[.@i +1], UNPC_HEADMIDDLE, .@head_mid[.@i];
		setunitdata .statue[.@i +1], UNPC_HEADBOTTOM, .@head_bottom[.@i];
		setunitdata .statue[.@i +1], UNPC_ROBE, .@robe[.@i];
		setnpcdisplay "mvp_ladder_statue#"+(.@i +1), .@name$[.@i];
		.statue_name$[.@i +1] = .@name$[.@i];
		.statue_guild$[.@i +1] = getguildname(.@guild_id[.@i]);
		.statue_kills[.@i +1] = .@kills[.@i];
	}
	for (.@i = .@nb; .@i < .showstatue; ++.@i)
		setunitdata .statue[.@i +1], UNPC_CLASS, HIDDEN_WARP_NPC;
	initnpctimer;

// MVP Map list
	setarray .map$,
		"moc_pryd06","lhz_dun03","gld2_prt","abbey02","ayo_dun02","lhz_dun04",
		"ra_fild02","xmas_fild01","dic_dun02","beach_dun","iz_dun05","tur_dun04",
		"lhz_dun02","jupe_core","moc_fild22","anthell02","odin_tem03","gon_dun03",
		"gef_fild02","thana_boss","gef_fild10","ein_dun02","gef_fild14","moc_pryd04",
		"dew_dun01","in_sphinx5","niflheim","moc_fild17","xmas_dun02","ice_dun03",
		"kh_dun02","treasure02","moc_prydn2","pay_dun04","ra_san05","mosk_dun03",
		"ama_dun03","thor_v03","gef_dun01","mjolnir_04","abyss_03","dic_dun03",
		"prt_sewb4","pay_fild11","gef_dun02","gl_chyard","ra_fild03","ra_fild04",
		"ve_fild01","ve_fild02","lou_dun03","prt_maze03","bra_dun02";
	end; // onInit
	

OnNPCKillEvent: // Lógica para detectar quando um MvP é morto
	//if (getmonsterinfo(killedrid, MOB_MVPEXP) > 0) { // salva morte em todos os mapas
	if (getmonsterinfo(killedrid, MOB_MVPEXP) && inarray(.map$, strcharinfo(3)) > 0 ) { // salva morte dentro da array de mapas
			
			// inicio premio
			if (.reward_option) {
				for ( .@r = 0; .@r < getarraysize(.reward); .@r+= 2 )
					getitem .reward[.@r], .reward[.@r+1];
			}
			if (.announce) 
				announce "Player ["+ strcharinfo(0) +"] "+ ( getcharid(1) ? "do grupo ["+ strcharinfo(1) +"]":"" ) +" matou "+ getmonsterinfo( killedrid, MOB_NAME ) +" em "+ strcharinfo(3), bc_all;
		
			

		.@selectIfKillExistQuery$ = "SELECT char_id, mob_id, kills FROM mvpladder WHERE char_id = '" + getcharid(0) + "' AND mob_id = '" + killedrid + "';";
		// if (query_sql(.@selectIfKillExistQuery$) > 0) { // Existe uma morte daquele MVP, então +1 para contagem de mortes
		if (query_sql(.@selectIfKillExistQuery$, .@charid, .@kills, .@name$) > 0) { // Exist a kill of that MVP so +1 to kill count

			.@updateLadderQuery$ = "UPDATE mvpladder SET kills = kills + 1 WHERE char_id = '" + getcharid(0) + "' AND mob_id = '" + killedrid + "'";
		} else { // Crie uma nova morte de MVP específico
			//.@updateLadderQuery$ = "INSERT INTO mvpladder (char_id, mob_id, kills) VALUES ('" + getcharid(0) + "','" + killedrid + "','1');";
			.@updateLadderQuery$ = "INSERT INTO mvpladder (`char_id` , `mob_id` , `kills`) VALUES ('" + getcharid(0) + "','" + killedrid + "','1');";
		}
		query_sql(.@updateLadderQuery$);

	}
	end;
}

//---- Informações do NPC Lider MVP

prontera,168,175,6	script	Lider MVP	120,{
	.@npcname$ = strnpcinfo(0);
	while (1) {
		mes "["+ .@npcname$ +"]";
		mes "Olá "+ strcharinfo(0) +"...";
		mes "Se quiser, posso mostrar suas estatísticas de MVP.";
		next;
		switch (select("Lista dos top assassinos de MVP","Lista de MVPs mais mortos","Informações próprias")) {
		mes "["+ .@npcname$ +"]";
		case 1:
			.@queryKillerList$ = "SELECT t1.char_id, SUM(t1.kills) as `orderKills`, t2.name " +
								 "FROM `mvpladder` t1 " +
								 "INNER JOIN `char` t2 " +
								 "ON t1.char_id = t2.char_id " +
								 "GROUP BY t1.char_id " +
								 "ORDER BY `orderKills` DESC " +
								 "LIMIT " + getvariableofnpc(.showtotal, "mvpladder") + ";";
			.@nb = query_sql(.@queryKillerList$, .@charid, .@kills, .@name$);
			if (!.@nb) {
				mes "O top está vazia no momento.";
				next;
			}
			for (.@j = 0; .@j < .@nb; .@j += getvariableofnpc(.showpage,"mvpladder")) {
				for (.@i = .@j; .@i < (getvariableofnpc(.showpage,"mvpladder") + .@j) && .@i < .@nb; ++.@i)
					mes "^996600" + (.@i+1) + ": ^006699" + .@name$[.@i] + " ^00AA00[^FF0000" + .@kills[.@i] + " MvP^00AA00 mortos]^000000";
				next;
			}
			break;
			
		case 2:
			.@queryKilledList$ = "SELECT char_id, mob_id, SUM(kills) as `orderKills` " +
								 "FROM `mvpladder` " +
								 "GROUP BY mob_id " +
								 "ORDER BY `orderKills` DESC " +
								 "LIMIT " + getvariableofnpc(.showtotal, "mvpladder") + ";";
			.@nb = query_sql(.@queryKilledList$, .@charid, .@mobid, .@kills);
			if (!.@nb) {
				mes "O top está vazia no momento.";
				next;
			}
			for (.@j = 0; .@j < .@nb; .@j += getvariableofnpc(.showpage,"mvpladder")) {
				for (.@i = .@j; .@i < (getvariableofnpc(.showpage,"mvpladder") + .@j) && .@i < .@nb; ++.@i) {
					mes "^996600" + (.@i+1) + ": ^006699" + strmobinfo(1, .@mobid[.@i]) + " ^FF0000MvP ^00AA00[Morto ^FF0000" + .@kills[.@i] + " ^00AA00vezes]^000000";
				}
				next;
			}
			query_sql("SELECT SUM(kills) FROM mvpladder;", .@killCount);
			mes "^996600==> ^006699Total de MvP Mortos [^FF0000" + .@killCount[0] + " ^00AA00mortes]^000000";
			break;
			
		case 3:
			.@queryOwnLadder$ = "SELECT char_id, mob_id, SUM(kills) as `orderKills` " +
								"FROM `mvpladder` " +
								"WHERE char_id = '" + getcharid(0) + "'" +
								"ORDER BY `orderKills` DESC;";
			.@nb = query_sql(.@queryOwnLadder$, .@charid, .@mobid, .@kills);
			if (!.@nb) {
				mes "O top está vazia no momento.";
				next;
			}
			.@totalKillCount = 0;
			for (.@j = 0; .@j < .@nb; .@j += getvariableofnpc(.showpage,"mvpladder")) {
				for (.@i = .@j; .@i < (getvariableofnpc(.showpage,"mvpladder") + .@j) && .@i < .@nb; ++.@i ) {	
					mes "^996600" + (.@i+1) + ": ^006699" + strmobinfo(1, .@mobid[.@i]) + " ^FF0000MvP ^00AA00[Morto ^FF0000" + .@kills[.@i] + " ^00AA00vezes]^000000";
					.@totalKillCount = .@totalKillCount + .@kills[.@i];
				}
				next;
				//dispbottom "Você já matou [^FF0000" + .@totalKillCount[0] + " ^00AA00 MVP]";
			}
			mes "^996600==> ^006699Total de MvP Mortos [^FF0000" + .@totalKillCount + " ^00AA00mortes]^000000";
			break;
        }
OnInit:
	initnpctimer;
	end;
OnTimer1000:
	showscript("Lider MVP");
	setnpctimer 0;
	end;
    }
close;

}

//---- MSG board NPCs

-	script	mvp_ladder_statue	-1,{
	.@id = getelementofarray(getvariableofnpc(.npcgid, "mvpladder"), getnpcid(0));
	mes "^996600[TOP MVP "+ .@id +"]";
	mes "^006699Nome: "+ getelementofarray(getvariableofnpc(.statue_name$, "mvpladder"), .@id);
	.@guildname$ = getelementofarray(getvariableofnpc(.statue_guild$, "mvpladder"), .@id);
	mes "^00AAAAGuild: "+((.@guildname$ == "null")? "^AAAAAANone": .@guildname$);
	mes "^00AA00Matou: ["+ getelementofarray(getvariableofnpc(.statue_kills, "mvpladder"), .@id) +"]";
	close;

OnInit:
	.@id = strnpcinfo(2);
	set getvariableofnpc(.statue[.@id], "mvpladder"), getnpcid(0);
	set getvariableofnpc(.npcgid[getnpcid(0)], "mvpladder"), .@id;
	end;
}

prontera,152,179,4	duplicate(mvp_ladder_statue)	mvp_ladder_statue#1	1_F_MARIA
prontera,154,179,4	duplicate(mvp_ladder_statue)	mvp_ladder_statue#2	1_F_MARIA
prontera,156,179,4	duplicate(mvp_ladder_statue)	mvp_ladder_statue#3	1_F_MARIA
//== clone base
//prontera,174,204,4	script	#2	PORTAL,{
//end;
//
//OnInit:
//while(1) {
//specialeffect EF_MVP;
//sleep 6000;
//}
//}
//prontera,200,161,4	script	#npcuniquename	PORTAL,{}
//prontera,202,162,4	script	#npcuniquename1	PORTAL,{}
//prontera,204,163,4	script	#npcuniquename2	PORTAL,{}
//== msg top da cabeça
prontera,152,179,4	script	 #top1	111,{
OnInit:
	initnpctimer;
	end;
OnTimer1000:
	showscript("Top-1 MVP");
	setnpctimer 0;
	end;
}

prontera,154,179,4	script	 #top2	111,{
OnInit:
	initnpctimer;
	end;
OnTimer1000:
	showscript("Top-2 MVP");
	setnpctimer 0;
	end;
}

prontera,156,179,4	script	 #top3	111,{
OnInit:
	initnpctimer;
	end;
OnTimer1000:
	showscript("Top-3 MVP");
	setnpctimer 0;
	end;
}








// =================== MVP KILL ===============
// ====== MVP will drop an item only ==========
// ====== at specific maps. ===================
// ====== if players are on a party ===========
// ====== item will be given randomly =========
// ====== to any online party members =========
// ============== by : pajodex ================
// ==== Additional Comments: ==================
// 1.0 - Initial release (MVP Kill standalone)
// 1.1 - used setarray function to optimize script
// 1.2 - Added modified Euphy MVP ladder
//		 slight rework on the script
// 1.3 - Fixed on reset function (Report by: celeron0134)
// 2.0 - Revision to work on latest server file (2023)
//	 	 Removed 'drop chance%'
//	 	 Added 'reward option'
//	 	 Script clean-up
// ============================================
//  -	script	#mvp_kill	-1,{

// OnInit:
// 	// 0 = disabled
// 	// 1 = killer only
// 	// 2 = (on party) randomly to party member online
// 	// 3 = (on party) to all members online
// 	.reward_option = 1;

// 	// Item reward list
// 	// can add more than 1 items
// 	// <item>, <id>
// 	setarray .reward, 
// 		601,1;

// 	// Enable announcement?
// 	.announce = true;

// 	// Prevents gm level and above to trigger the event
// 	.gm = 10;  

// 	// MVP Map list
// 	setarray .map$,
// 		"moc_pryd06","lhz_dun03","gld2_prt","abbey02","ayo_dun02","lhz_dun04",
// 		"ra_fild02","xmas_fild01","dic_dun02","beach_dun","iz_dun05","tur_dun04",
// 		"lhz_dun02","jupe_core","moc_fild22","anthell02","odin_tem03","gon_dun03",
// 		"gef_fild02","thana_boss","gef_fild10","ein_dun02","gef_fild14","moc_pryd04",
// 		"dew_dun01","in_sphinx5","niflheim","moc_fild17","xmas_dun02","ice_dun03",
// 		"kh_dun02","treasure02","moc_prydn2","pay_dun04","ra_san05","mosk_dun03",
// 		"ama_dun03","thor_v03","gef_dun01","mjolnir_04","abyss_03","dic_dun03",
// 		"prt_sewb4","pay_fild11","gef_dun02","gl_chyard","ra_fild03","ra_fild04",
// 		"ve_fild01","ve_fild02","lou_dun03","prt_maze03","bra_dun02";
// 	end;




// OnNPCKillEvent: // Lógica para detectar quando um MvP é morto
// 	//if (getmonsterinfo(killedrid, MOB_MVPEXP) > 0) { // salva morte em todos os mapas
// 	if (getmonsterinfo(killedrid, MOB_MVPEXP) && inarray(.map$, strcharinfo(3)) > 0 ) { // salva morte dentro da array de mapas
// 		.@selectIfKillExistQuery$ = "SELECT char_id, mob_id, kills FROM mvpladder WHERE char_id = '" + getcharid(0) + "' AND mob_id = '" + killedrid + "';";
// 		// if (query_sql(.@selectIfKillExistQuery$) > 0) { // Existe uma morte daquele MVP, então +1 para contagem de mortes
// 		if (query_sql(.@selectIfKillExistQuery$, .@charid, .@kills, .@name$) > 0) { // Exist a kill of that MVP so +1 to kill count

// 			.@updateLadderQuery$ = "UPDATE mvpladder SET kills = kills + 1 WHERE char_id = '" + getcharid(0) + "' AND mob_id = '" + killedrid + "'";
// 		} else { // Crie uma nova morte de MVP específico
// 			//.@updateLadderQuery$ = "INSERT INTO mvpladder (char_id, mob_id, kills) VALUES ('" + getcharid(0) + "','" + killedrid + "','1');";
// 			.@updateLadderQuery$ = "INSERT INTO mvpladder (`char_id` , `mob_id` , `kills`) VALUES ('" + getcharid(0) + "','" + killedrid + "','1');";
// 		}
// 		query_sql(.@updateLadderQuery$);
// 	}
// 	end;


// OnNPCKillEvent:
// 	//if (getgmlevel() >= .gm ) end;
// 	if ( getmonsterinfo(killedrid, MOB_MVPEXP) && inarray(.map$, strcharinfo(3)) != -1 ) {
// 		if ( getcharid(1) ) {
// 			getpartymember getcharid(1), 1;
// 			getpartymember getcharid(1), 2;
// 			for ( .@i = 0; .@i < $@partymembercount; .@i++ ) {
// 				if ( isloggedin( $@partymemberaid[.@i], $@partymembercid[.@i] ) ) {
// 					if (.reward_option == 2) {
// 						.@partymemberaid[.@c] = $@partymemberaid[.@i];
// 						.@c++;
// 					} else if (.reward_option == 3) {
// 						for ( .@r = 0; .@r < getarraysize(.reward); .@r+= 2 )
// 							getitem .reward[.@r], .reward[.@r+1];
// 					}
// 				}
// 			}
// 			if (.reward_option == 2) {
// 				for ( .@r = 0; .@r < getarraysize(.reward); .@r+= 2 )
// 					getitem .reward[.@r], .reward[.@r+1], .@partymemberaid[ rand( .@c ) ];
// 			}
// 		}
// 		else {
// 			if (.reward_option) {
// 				for ( .@r = 0; .@r < getarraysize(.reward); .@r+= 2 )
// 					getitem .reward[.@r], .reward[.@r+1];
// 			}
// 		}
// 		if (.announce) 
// 			announce "[ System ] : Player ["+ strcharinfo(0) +"] "+ ( getcharid(1) ? "do grupo ["+ strcharinfo(1) +"]":"" ) +" matou "+ getmonsterinfo( killedrid, MOB_NAME ) +" em "+ strcharinfo(3), bc_all;
		
// 		query_sql("SELECT SUM(kills) FROM mvpladder;", .@killCount);
// 		dispbottom "---------------------------------------------------";
// 		dispbottom "Você já matou [^FF0000" + .@killCount[0] + " ^00AA00MVP]";
// 		dispbottom "---------------------------------------------------";
// 	}
// 	end;
// }
